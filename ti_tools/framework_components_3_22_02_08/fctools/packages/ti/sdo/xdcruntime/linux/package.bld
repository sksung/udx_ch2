/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/*
 * This package distributes its sources in the default release.  This is to
 * enable better understanding by the customer/field, as well as enable
 * modification and profiling techniques in the field.
 */
Pkg.attrs.exportSrc = true;

Pkg.otherFiles = ["package.bld"];

var commonSrcs = [
    "GateThreadSupport.c",
    "GateProcessSupport.c",
    "SemThreadSupport.c",
    "SemProcessSupport.c",
    "ThreadSupport.c",
//  "CacheSupport.c",
    "TimestampPosix.c"
];

/* clean lib folder */
Pkg.generatedFiles.$add("lib/");

/*
 * note, the slice() creates a copy of the array rather than simply a
 * reference to it.
 */
var ARMSrcs = commonSrcs.slice();
var X86Srcs = commonSrcs.slice();
//ARMSrcs.push("HeapCMEM.c");

for each (var targ in Build.targets) {
    if ((targ.os == "Linux") || (targ.os == "Qnx")) {
        /* ARM targets */
        if ((":"+targ.getISAChain().join(":")+":").match(/:v5T:|:v6:|:v7A:/i)) {
            Pkg.addLibrary("lib/debug/osal_linux_470", targ, {
                profile: "debug",
            }).addObjects(ARMSrcs);

            Pkg.addLibrary("lib/release/osal_linux_470", targ).addObjects(ARMSrcs);
        }

        /* Intel targets */
        else if ((":"+targ.getISAChain().join(":")+":").match(/:i686:/)) {
            Pkg.addLibrary("lib/debug/osal_linux_86U", targ, {
                    profile: "debug",
            }).addObjects(X86Srcs);

            Pkg.addLibrary("lib/release/osal_linux_86U", targ).addObjects(X86Srcs);
        }
        else {
            print("Skipping unsupported target " + targ + "\n");
        }
    }
}
/*
 *  @(#) ti.sdo.xdcruntime.linux; 1, 0, 0,1; 2-15-2012 07:45:02; /db/atree/library/trees/osal/osal-e09/src/ xlibrary

 */

