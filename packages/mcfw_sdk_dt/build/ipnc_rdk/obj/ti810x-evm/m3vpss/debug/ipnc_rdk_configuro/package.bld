/* THIS IS A GENERATED FILE -- DO NOT EDIT */

var targ = xdc.module('ti.targets.arm.elf.M3');
/* configuro was told the platform explicitly */
var platform = 'ti.platforms.evmTI814X:core1';

/* decide whether to make an assembly or an executable */
var makeAssembly = false;


var Executable = xdc.module('xdc.bld.Executable');

var exeOpts = new Executable.Attrs({
        cfgScript: '/home/sksung/work/udx/ch2/packages/mcfw_sdk_dt/mcfw/src_bios6/main_app/MAIN_APP_m3vpss.cfg',
        profile: 'debug',
        cfgHome: 'ipnc_rdk_configuro',
});

/* if the build model supports encoded cfgArgs, use it */
if ('cfgArgsEncoded' in exeOpts) {
    exeOpts.cfgArgs = '%7BcoreName%3A%20%22VPSS-M3%22%2C%20platformMem%3A%20%221024M%22%7D';
    exeOpts.cfgArgsEncoded = true;
}
else {
    /* otherwise, we must risk errors if cfgArgs contains embedded 's */
    exeOpts.cfgArgs = '{coreName: "VPSS-M3", platformMem: "1024M"}';
}

var exe = Pkg[makeAssembly ? 'addAssembly': 'addExecutable'](
    'MAIN_APP_m3vpss',
    targ,
    platform,
    exeOpts
);

/*
 * Generate the compiler.opt file
 * Do this here instead of during the initial creation of the configuro
 * package, because the contents of any config.bld script are unknown
 * at that time. Config.bld can't be executed until the XDC build phase.
 */
if (makeAssembly) {
    var suffix  = targ.dllExt || '.p' + targ.suffix;
}
else {
    var suffix  = '.p' + targ.suffix;
}
var thisObj = {
    cfg:        'MAIN_APP_m3vpss.cfg',
    outputPath: '/home/sksung/work/udx/ch2/packages/mcfw_sdk_dt/build/ipnc_rdk/obj/ti810x-evm/m3vpss/debug/ipnc_rdk_configuro',
    exeName:    'MAIN_APP_m3vpss' + suffix,
    exeIntName: 'MAIN_APP_m3vpss' + suffix.replace('.', '_'),
    targ:       targ,
    legacyTcf:  false,
    bios5Incs:  false,
    linkerCommandFile: 'linker.cmd',
    makeAssembly: makeAssembly
};
var tmpl = xdc.loadTemplate('xdc/tools/configuro/template/compiler.opt.xdt');
tmpl.genFile('compiler.opt', thisObj, [], false);

/*
 * Generate the custom makefile.
 */
var tmpl = xdc.loadTemplate('xdc/tools/configuro/template/' + 
    (makeAssembly? 'custom.mak.asm.xdt' : 'custom.mak.exe.xdt'));
tmpl.genFile('custom.mak', thisObj, [], false);
Pkg.makeEpilogue = "include custom.mak";

/*
 * Generate the package script.
 */
var tmpl = xdc.loadTemplate('xdc/tools/configuro/template/package.xs.xdt');
tmpl.genFile('package.xs', thisObj, [], false);

if (makeAssembly) {
/*
 * Generate the linker options into a staging file, so that the presence or
 * age of the advertised linker command file can be the makefile trigger to
 * rebuild the package from the user's config script.
 */
    var tmpl = xdc.loadTemplate('xdc/tools/configuro/template/linker.cmd.asm.xdt');
    tmpl.genFile('linker.cmd.cp', thisObj, [], false);
}
